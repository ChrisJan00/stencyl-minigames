<cartoonistGameXML version="1" involvesScore="false" involvesLives="false" randomSeed="9329077" playerName="plumber" inputImg="keyboard" input="the arrow keys and space bar" playerSprite="" winText="Grab princess and bring it to the goal." loseText="When time runs out." recipes="Win: Grab princess and bring it to the goal.&#xA;&#xA;Lose: When time runs out.&#xA;" gameTitle="The plumber Game" gameByline="Game-O-Matic" gameWebsite="http://www.game-o-matic.com/" gameDescription="null" gameCustomWin="You Win!" gameCustomLose="You Lose..." gameConclusion="Having played this game, there is something you may have learned." conceptMapSummary="A game where plumber collects coins, plumber saves princess, plumber kills turtles and plumber eats mushrooms.">
  <group name="generatedGame">
    <objectReference name="mushrooms"/>
    <objectReference name="turtles"/>
    <objectReference name="princess"/>
    <objectReference name="coins"/>
    <objectReference name="World-gom-xygisofjd"/>
  </group>
  <entity name="plumber" alias="plumber">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>-153.84615384615384</y>
      </position>
      <size>
        <x>62.308083269745104</x>
        <y>62.308083269745104</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>princess</_0>
        <_1>gom-wall</_1>
        <_2>mushrooms</_2>
        <_3>turtles</_3>
        <_4>coins</_4>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>plumber</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>99</red>
      <green>69</green>
      <blue>127</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>plumber</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="GrabAndMoveComponent0" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.GrabAndMoveComponent">
      <spatialProperty>@Spatial</spatialProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <neverRelease>true</neverRelease>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>princess</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="SlowDownFrictionComponent" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.8</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="DefaultDisableComponent0" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.DefaultDisableComponent">
      <enableComponentType>SlowDownFrictionComponent</enableComponentType>
    </component>
    <component name="MakeTemplateComponent0" verb="" specific="" unfulfilled="null" recipe="ReverseFrogger" type="CartoonistEngine.MakeTemplateComponent"/>
    <component name="DriveWithArrowsComponent0" verb="Auto-PlayerMove" specific="" unfulfilled="null" type="CartoonistEngine.DriveWithArrowsComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <acceleration>10.659881506115198</acceleration>
      <turnSpeed>0.10639174855314196</turnSpeed>
      <fuelRate>1611.736478516832</fuelRate>
      <allowReverse>true</allowReverse>
      <jetMode>false</jetMode>
      <fuelMeterDecTime>0.8569121785461904</fuelMeterDecTime>
      <meterEventID/>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="RespawnOnRemoveComponent0" verb="" specific="" unfulfilled="null" recipe="Respawn player" type="CartoonistEngine.RespawnOnRemoveComponent">
      <spawnPos>random</spawnPos>
      <spawnRegionLeft>-261.7888855980709</spawnRegionLeft>
      <spawnRegionRight>70.97871577134356</spawnRegionRight>
      <spawnRegionTop>-149.0807649679482</spawnRegionTop>
      <spawnRegionBottom>80.74081060476601</spawnRegionBottom>
      <respawnIfLessThanEntityCount>10</respawnIfLessThanEntityCount>
      <spawnWithNoOverlap>true</spawnWithNoOverlap>
    </component>
    <component name="EdgeWrapComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.EdgeWrapComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <template name="Goal" alias="Goal">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>0</y>
      </position>
      <size>
        <x>31.154041634872552</x>
        <y>31.154041634872552</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>false</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>princess</_0>
        <_1>gom-wall</_1>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>Goal</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/star-gold.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="InanimateObjectComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.InanimateObjectComponent"/>
    <component name="RemoveOnCollideComponent0" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.RemoveOnCollideComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <invulnSeconds>1.8361033532768487</invulnSeconds>
      <winOnRemove>true</winOnRemove>
      <loseOnRemove>false</loseOnRemove>
      <meterIncOnRemove>false</meterIncOnRemove>
      <meterDecOnRemove>false</meterDecOnRemove>
      <meterEventID/>
      <playExplosion>true</playExplosion>
      <doNotRespawn>false</doNotRespawn>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>princess</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.8755279839131981</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
  </template>
  <template name="gom-wall" alias="gom-wall">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>0</y>
      </position>
      <size>
        <x>31.154041634872552</x>
        <y>31.154041634872552</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>false</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>plumber</_0>
        <_1>Goal</_1>
        <_2>mushrooms</_2>
        <_3>turtles</_3>
        <_4>princess</_4>
        <_5>coins</_5>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>gom-wall</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/gom-wall.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="InanimateObjectComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.InanimateObjectComponent"/>
    <component name="MakeSolidComponent0" verb="auto-solid" specific="" unfulfilled="null" type="CartoonistEngine.MakeSolidComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <collideWithAllTypes>true</collideWithAllTypes>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
        <_1>
          <type>Goal</type>
        </_1>
        <_2>
          <type>mushrooms</type>
        </_2>
        <_3>
          <type>turtles</type>
        </_3>
        <_4>
          <type>princess</type>
        </_4>
        <_5>
          <type>coins</type>
        </_5>
        <_6>
          <type>plumber</type>
        </_6>
        <_7>
          <type>Goal</type>
        </_7>
        <_8>
          <type>mushrooms</type>
        </_8>
        <_9>
          <type>turtles</type>
        </_9>
        <_10>
          <type>princess</type>
        </_10>
        <_11>
          <type>coins</type>
        </_11>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.8945586864743382</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
  </template>
  <entity name="mushrooms" alias="mushrooms">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>-225.16660498395396</x>
        <y>76.9230769230769</y>
      </position>
      <size>
        <x>62.308083269745104</x>
        <y>62.308083269745104</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>gom-wall</_0>
        <_1>plumber</_1>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>mushrooms</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>200</red>
      <green>193</green>
      <blue>141</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>mushrooms</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="RemoveOnCollideComponent0" verb="eats" specific="removes" unfulfilled="null" type="CartoonistEngine.RemoveOnCollideComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <invulnSeconds>1.762025022879243</invulnSeconds>
      <winOnRemove>false</winOnRemove>
      <loseOnRemove>false</loseOnRemove>
      <meterIncOnRemove>false</meterIncOnRemove>
      <meterDecOnRemove>false</meterDecOnRemove>
      <meterEventID/>
      <playExplosion>true</playExplosion>
      <doNotRespawn>false</doNotRespawn>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="StaysNearbyComponent0" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.StaysNearbyComponent">
      <STOP_COMPARISON_EVENT/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <leaderName>plumber</leaderName>
      <activationDistance>396.7974681407213</activationDistance>
      <distanceToMaintain>21.3550210185349</distanceToMaintain>
      <acceleration>11.147787838242948</acceleration>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.9178769902791828</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="TrapOnScreenComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.TrapOnScreenComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <edgeBounce>false</edgeBounce>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <entity name="turtles" alias="turtles">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>-153.84615384615384</y>
      </position>
      <size>
        <x>62.308083269745104</x>
        <y>62.308083269745104</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>gom-wall</_0>
        <_1>plumber</_1>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>turtles</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>67</red>
      <green>239</green>
      <blue>121</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>turtles</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="RemoveOnCollideComponent0" verb="kills" specific="removes" unfulfilled="null" type="CartoonistEngine.RemoveOnCollideComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <invulnSeconds>1.4403326949104667</invulnSeconds>
      <winOnRemove>false</winOnRemove>
      <loseOnRemove>false</loseOnRemove>
      <meterIncOnRemove>false</meterIncOnRemove>
      <meterDecOnRemove>false</meterDecOnRemove>
      <meterEventID/>
      <playExplosion>true</playExplosion>
      <doNotRespawn>false</doNotRespawn>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.9007724511623383</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="TrapOnScreenComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.TrapOnScreenComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <edgeBounce>false</edgeBounce>
    </component>
    <component name="AdvanceOnTimerComponent0" verb="" specific="" unfulfilled="null" recipe="everything moves" nonTerminal="_movesInAnyWay" type="CartoonistEngine.AdvanceOnTimerComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <accelerationX>-1.2551448782905936</accelerationX>
      <accelerationY>-15.524507242254913</accelerationY>
      <minAcceleration>5</minAcceleration>
      <timeInSecs>1.1807897784747183</timeInSecs>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <entity name="princess" alias="princess">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>153.84615384615387</y>
      </position>
      <size>
        <x>62.308083269745104</x>
        <y>62.308083269745104</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>plumber</_0>
        <_1>Goal</_1>
        <_2>gom-wall</_2>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>princess</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>100</red>
      <green>200</green>
      <blue>120</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>princess</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="ShrinkComponent0" verb="saves" specific="rescueFromShrinking" unfulfilled="null" type="CartoonistEngine.ShrinkComponent">
      <sizeProperty>@Spatial.size</sizeProperty>
      <scaleWithoutCollision>true</scaleWithoutCollision>
      <growOrShrink>shrink</growOrShrink>
      <growTimer>56.58901567570865</growTimer>
      <minShrinkScale>0.1</minShrinkScale>
      <maxGrowScale>1.185905755776912</maxGrowScale>
      <growScaleDelta>0.3</growScaleDelta>
      <scaleOtherEntityName/>
      <destroyOnMinShrink>true</destroyOnMinShrink>
      <collisionSounds childType="CartoonistEngine.SoundTypePair"/>
    </component>
    <component name="GrowComponent0" verb="saves" specific="rescueFromShrinking" unfulfilled="null" type="CartoonistEngine.GrowComponent">
      <sizeProperty>@Spatial.size</sizeProperty>
      <scaleWithoutCollision/>
      <growOrShrink>grow</growOrShrink>
      <growTimer>66.2672939710319</growTimer>
      <minShrinkScale>0.3776107137091458</minShrinkScale>
      <maxGrowScale>3.6309406831860542</maxGrowScale>
      <growScaleDelta>0.6</growScaleDelta>
      <scaleOtherEntityName/>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="RespawnOnRemoveComponent0" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.RespawnOnRemoveComponent">
      <spawnPos>region</spawnPos>
      <spawnRegionLeft>-312</spawnRegionLeft>
      <spawnRegionRight>312</spawnRegionRight>
      <spawnRegionTop>230.76923076923077</spawnRegionTop>
      <spawnRegionBottom>250</spawnRegionBottom>
      <respawnIfLessThanEntityCount>10</respawnIfLessThanEntityCount>
      <spawnWithNoOverlap>true</spawnWithNoOverlap>
    </component>
    <component name="TrapOnScreenComponent0" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.TrapOnScreenComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <edgeBounce>false</edgeBounce>
    </component>
    <component name="EnableDisableOnCollideComponent0" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.EnableDisableOnCollideComponent">
      <defaultDisable>true</defaultDisable>
      <defaultEnable>false</defaultEnable>
      <continuousCollisionNeeded>true</continuousCollisionNeeded>
      <shouldBlink>true</shouldBlink>
      <enableComponentType>SlowDownFrictionComponent</enableComponentType>
      <mode>enable</mode>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.9001175286993385</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <entity name="coins" alias="coins">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>153.84615384615387</y>
      </position>
      <size>
        <x>124.61616653949021</x>
        <y>124.61616653949021</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>gom-wall</_0>
        <_1>plumber</_1>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>coins</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>190</red>
      <green>197</green>
      <blue>17</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>coins</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="RemoveOnCollideComponent0" verb="collects" specific="removes" unfulfilled="null" type="CartoonistEngine.RemoveOnCollideComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <invulnSeconds>1.417503326572478</invulnSeconds>
      <winOnRemove>false</winOnRemove>
      <loseOnRemove>false</loseOnRemove>
      <meterIncOnRemove>false</meterIncOnRemove>
      <meterDecOnRemove>false</meterDecOnRemove>
      <meterEventID/>
      <playExplosion>true</playExplosion>
      <doNotRespawn>false</doNotRespawn>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.9090152063872665</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="TrapOnScreenComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.TrapOnScreenComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <edgeBounce>false</edgeBounce>
    </component>
    <component name="WanderMovementComponent0" verb="" specific="" unfulfilled="null" recipe="everything moves" nonTerminal="_movesInAnyWay" type="CartoonistEngine.WanderMovementComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <showRotation>true</showRotation>
      <speed>14.628729398362339</speed>
      <minDist>41.70437618624419</minDist>
      <maxDist>544.3112415494397</maxDist>
      <angSpeed>4.168089371174574</angSpeed>
      <minRotation>65.61806530458853</minRotation>
      <maxRotation>134.58544235676527</maxRotation>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <entity name="World-gom-xygisofjd" alias="World-gom-xygisofjd">
    <component name="WorldObjectComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.WorldObjectComponent"/>
    <component name="GlobalEntityZOrderComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.GlobalEntityZOrderComponent"/>
    <component name="InanimateObjectComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.InanimateObjectComponent"/>
    <component name="SpawnGridComponent0" verb="" specific="" unfulfilled="null" recipe="capture the flag (3 role)" type="CartoonistEngine.SpawnGridComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <gridCenterX>0</gridCenterX>
      <gridCenterY>-223.07692307692307</gridCenterY>
      <spacingX>75</spacingX>
      <spacingY>25</spacingY>
      <spawnCountX>10</spawnCountX>
      <spawnCountY>1</spawnCountY>
      <chanceOfGridPositionBeingFilled>0.7761377072893083</chanceOfGridPositionBeingFilled>
      <spawnType>Goal</spawnType>
      <spawnInScreen>false</spawnInScreen>
      <spawnWithNoOverlap>false</spawnWithNoOverlap>
      <spawnInRandomPosition>false</spawnInRandomPosition>
    </component>
    <component name="MeterComponent0" verb="" specific="" unfulfilled="null" recipe="Run out of time" type="CartoonistEngine.MeterComponent">
      <nameLabel>Time Left:</nameLabel>
      <minValue>0</minValue>
      <maxValue>42</maxValue>
      <value>42</value>
      <changeAmount>-1</changeAmount>
      <changeOnTickFlag>true</changeOnTickFlag>
      <disableOnMax>false</disableOnMax>
      <disableOnMin>false</disableOnMin>
      <enableOnMax>false</enableOnMax>
      <enableOnMin>false</enableOnMin>
      <enableOnNotMin>false</enableOnNotMin>
      <disableOnNotMax>false</disableOnNotMax>
      <enableOnNotMax>false</enableOnNotMax>
      <disableOnNotMin>false</disableOnNotMin>
      <enableComponentType>_allComponents</enableComponentType>
      <winOnMax>false</winOnMax>
      <winOnMin>false</winOnMin>
      <loseOnMax>false</loseOnMax>
      <loseOnMin>true</loseOnMin>
      <entityToToggleActivation/>
      <linkedEntityName/>
      <linkedEntityProperty/>
      <linkedEntityMaxProperty/>
      <linkedEntityMinProperty/>
      <eventID/>
    </component>
    <component name="SpawnGridComponent1" verb="" specific="" unfulfilled="null" recipe="ReverseFrogger" type="CartoonistEngine.SpawnGridComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <gridCenterX>-22.66211099922657</gridCenterX>
      <gridCenterY>-60.24692626670003</gridCenterY>
      <spacingX>100</spacingX>
      <spacingY>150</spacingY>
      <spawnCountX>4.072771321050823</spawnCountX>
      <spawnCountY>1.4297629850916564</spawnCountY>
      <chanceOfGridPositionBeingFilled>0.7</chanceOfGridPositionBeingFilled>
      <spawnType>plumber</spawnType>
      <spawnInScreen>true</spawnInScreen>
      <spawnWithNoOverlap>false</spawnWithNoOverlap>
      <spawnInRandomPosition>false</spawnInRandomPosition>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
  </entity>
</cartoonistGameXML>