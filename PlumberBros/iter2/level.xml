<cartoonistGameXML version="1" involvesScore="true" involvesLives="false" randomSeed="1711717" playerName="plumber" inputImg="mouse" input="mouse" playerSprite="" winText="Remove all of turtles from the screen." loseText="When time runs out." recipes="Win: Remove all of turtles from the screen.&#xA;&#xA;Lose: When time runs out.&#xA;" gameTitle="The plumber Game" gameByline="Game-O-Matic" gameWebsite="http://www.game-o-matic.com/" gameDescription="null" gameCustomWin="You Win!" gameCustomLose="You Lose..." gameConclusion="Having played this game, there is something you may have learned." conceptMapSummary="A game where plumber collects coins, plumber saves princess, plumber kills turtles and plumber eats mushrooms.">
  <group name="generatedGame">
    <objectReference name="plumber"/>
    <objectReference name="mushrooms"/>
    <objectReference name="princess"/>
    <objectReference name="coins"/>
    <objectReference name="World-gom-xygisofjd"/>
  </group>
  <entity name="plumber" alias="plumber">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>153.84615384615387</y>
      </position>
      <size>
        <x>93.35480723530054</x>
        <y>93.35480723530054</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>gom-wall</_0>
        <_1>mushrooms</_1>
        <_2>turtles</_2>
        <_3>princess</_3>
        <_4>coins</_4>
        <_5>plumber</_5>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>plumber</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>243</red>
      <green>247</green>
      <blue>33</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>plumber</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="MouseControllerComponent0" verb="Auto-PlayerMove" specific="" unfulfilled="null" type="CartoonistEngine.MouseControllerComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <movementSpeed>16.640350790694356</movementSpeed>
      <turnSpeed>0.0771363165229559</turnSpeed>
      <mouseControllerType>cursor</mouseControllerType>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.9072778764087707</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="EdgeWrapComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.EdgeWrapComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
    </component>
    <component name="RespawnOnRemoveComponent0" verb="" specific="" unfulfilled="null" recipe="Respawn player" type="CartoonistEngine.RespawnOnRemoveComponent">
      <spawnPos>random</spawnPos>
      <spawnRegionLeft>-10.42647756403312</spawnRegionLeft>
      <spawnRegionRight>53.19448501104489</spawnRegionRight>
      <spawnRegionTop>-135.5845060897991</spawnRegionTop>
      <spawnRegionBottom>180.13138545211405</spawnRegionBottom>
      <respawnIfLessThanEntityCount>10</respawnIfLessThanEntityCount>
      <spawnWithNoOverlap>true</spawnWithNoOverlap>
    </component>
    <component name="MakeSolidComponent0" verb="" specific="" unfulfilled="null" recipe="give mouse player self-solidity" type="CartoonistEngine.MakeSolidComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <collideWithAllTypes>true</collideWithAllTypes>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <template name="gom-wall" alias="gom-wall">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>0</y>
      </position>
      <size>
        <x>46.67740361765027</x>
        <y>46.67740361765027</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>false</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>plumber</_0>
        <_1>mushrooms</_1>
        <_2>turtles</_2>
        <_3>princess</_3>
        <_4>coins</_4>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>gom-wall</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/gom-wall.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="InanimateObjectComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.InanimateObjectComponent"/>
    <component name="MakeSolidComponent0" verb="auto-solid" specific="" unfulfilled="null" type="CartoonistEngine.MakeSolidComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <collideWithAllTypes>true</collideWithAllTypes>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
        <_1>
          <type>mushrooms</type>
        </_1>
        <_2>
          <type>turtles</type>
        </_2>
        <_3>
          <type>princess</type>
        </_3>
        <_4>
          <type>coins</type>
        </_4>
        <_5>
          <type>plumber</type>
        </_5>
        <_6>
          <type>mushrooms</type>
        </_6>
        <_7>
          <type>turtles</type>
        </_7>
        <_8>
          <type>princess</type>
        </_8>
        <_9>
          <type>coins</type>
        </_9>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.899754012990743</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </template>
  <entity name="mushrooms" alias="mushrooms">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>225.16660498395402</x>
        <y>-76.92307692307693</y>
      </position>
      <size>
        <x>93.35480723530054</x>
        <y>93.35480723530054</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>gom-wall</_0>
        <_1>plumber</_1>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>mushrooms</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>43</red>
      <green>23</green>
      <blue>181</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>mushrooms</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="RemoveOnCollideComponent0" verb="eats" specific="tackle" unfulfilled="null" nonTerminal="_isVulnerable" type="CartoonistEngine.RemoveOnCollideComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <invulnSeconds>0.9036926034837962</invulnSeconds>
      <winOnRemove>false</winOnRemove>
      <loseOnRemove>false</loseOnRemove>
      <meterIncOnRemove>false</meterIncOnRemove>
      <meterDecOnRemove>false</meterDecOnRemove>
      <meterEventID/>
      <playExplosion>true</playExplosion>
      <doNotRespawn>false</doNotRespawn>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.8789149714820087</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="EdgeWrapComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.EdgeWrapComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
    </component>
    <component name="AdvanceOnTimerComponent0" verb="" specific="" unfulfilled="null" recipe="everything moves" nonTerminal="_movesInAnyWay" type="CartoonistEngine.AdvanceOnTimerComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <accelerationX>-10.89594461210072</accelerationX>
      <accelerationY>-17.951495902612805</accelerationY>
      <minAcceleration>5</minAcceleration>
      <timeInSecs>1.091206963174045</timeInSecs>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <template name="turtles" alias="turtles">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>225.16660498395402</x>
        <y>76.92307692307685</y>
      </position>
      <size>
        <x>93.35480723530054</x>
        <y>93.35480723530054</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>gom-wall</_0>
        <_1>plumber</_1>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>turtles</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>40</red>
      <green>35</green>
      <blue>232</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>turtles</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="RemoveOnCollideComponent0" verb="kills" specific="removes" unfulfilled="null" type="CartoonistEngine.RemoveOnCollideComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <invulnSeconds>1.4540041495114564</invulnSeconds>
      <winOnRemove>false</winOnRemove>
      <loseOnRemove>false</loseOnRemove>
      <meterIncOnRemove>false</meterIncOnRemove>
      <meterDecOnRemove>false</meterDecOnRemove>
      <meterEventID/>
      <playExplosion>true</playExplosion>
      <doNotRespawn>false</doNotRespawn>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="TallyMyKindComponent0" verb="" specific="" unfulfilled="null" recipe="removal win recipe" type="CartoonistEngine.TallyMyKindComponent">
      <kindLabel>turtles</kindLabel>
      <giveScoreTo/>
      <collidesWith/>
      <scoreEachRemoval>10</scoreEachRemoval>
      <winScore>-1</winScore>
      <iAmPlayerCharacterWithNLives>-1</iAmPlayerCharacterWithNLives>
      <loseOnRemoveAll>false</loseOnRemoveAll>
      <winOnRemoveAll>false</winOnRemoveAll>
      <collisionSounds childType="CartoonistEngine.SoundTypePair"/>
    </component>
    <component name="RespawnOnRemoveComponent0" verb="" specific="" unfulfilled="null" recipe="removal win recipe" type="CartoonistEngine.RespawnOnRemoveComponent">
      <spawnPos>random</spawnPos>
      <spawnRegionLeft>-260.2853133692406</spawnRegionLeft>
      <spawnRegionRight>64.8285090806894</spawnRegionRight>
      <spawnRegionTop>-109.56806351896375</spawnRegionTop>
      <spawnRegionBottom>70.10311726480722</spawnRegionBottom>
      <respawnIfLessThanEntityCount>10</respawnIfLessThanEntityCount>
      <spawnWithNoOverlap>true</spawnWithNoOverlap>
    </component>
    <component name="EnableDisableOnTimerComponent0" verb="" specific="" unfulfilled="null" recipe="removal win recipe" type="CartoonistEngine.EnableDisableOnTimerComponent">
      <defaultDisable>false</defaultDisable>
      <defaultEnable>false</defaultEnable>
      <shouldBlink>false</shouldBlink>
      <blinkColor/>
      <enableComponentType>RespawnOnRemoveComponent</enableComponentType>
      <timeRemaining>15</timeRemaining>
      <mode>disable</mode>
    </component>
    <component name="MakeTemplateComponent0" verb="" specific="" unfulfilled="null" recipe="removal win recipe" type="CartoonistEngine.MakeTemplateComponent"/>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.9170860738679767</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="EdgeWrapComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.EdgeWrapComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
    </component>
    <component name="ErraticMovementControllerComponent0" verb="" specific="" unfulfilled="null" recipe="everything moves" nonTerminal="_movesInAnyWay" type="CartoonistEngine.ErraticMovementControllerComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <acceleration>16.537297174334526</acceleration>
      <angle>0</angle>
      <min_stride_cycles>25</min_stride_cycles>
      <max_stride_cycles>150</max_stride_cycles>
      <margin_size>60</margin_size>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </template>
  <entity name="princess" alias="princess">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>0</x>
        <y>-153.84615384615384</y>
      </position>
      <size>
        <x>93.35480723530054</x>
        <y>93.35480723530054</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>gom-wall</_0>
        <_1>plumber</_1>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>princess</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>117</red>
      <green>110</green>
      <blue>97</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>princess</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="ShrinkComponent0" verb="saves" specific="rescueFromShrinking" unfulfilled="null" type="CartoonistEngine.ShrinkComponent">
      <sizeProperty>@Spatial.size</sizeProperty>
      <scaleWithoutCollision>true</scaleWithoutCollision>
      <growOrShrink>shrink</growOrShrink>
      <growTimer>61.26770067960024</growTimer>
      <minShrinkScale>0.1</minShrinkScale>
      <maxGrowScale>1.0542113560251891</maxGrowScale>
      <growScaleDelta>0.3</growScaleDelta>
      <scaleOtherEntityName/>
      <destroyOnMinShrink>true</destroyOnMinShrink>
      <collisionSounds childType="CartoonistEngine.SoundTypePair"/>
    </component>
    <component name="GrowComponent0" verb="saves" specific="rescueFromShrinking" unfulfilled="null" type="CartoonistEngine.GrowComponent">
      <sizeProperty>@Spatial.size</sizeProperty>
      <scaleWithoutCollision/>
      <growOrShrink>grow</growOrShrink>
      <growTimer>77.70038971677423</growTimer>
      <minShrinkScale>0.3804819399956614</minShrinkScale>
      <maxGrowScale>4.449731857981533</maxGrowScale>
      <growScaleDelta>0.6</growScaleDelta>
      <scaleOtherEntityName/>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.887629803903401</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="EdgeWrapComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.EdgeWrapComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
    </component>
    <component name="AdvanceOnTimerComponent0" verb="" specific="" unfulfilled="null" recipe="everything moves" nonTerminal="_movesInAnyWay" type="CartoonistEngine.AdvanceOnTimerComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <accelerationX>12.312866167165339</accelerationX>
      <accelerationY>12.553312303498387</accelerationY>
      <minAcceleration>5</minAcceleration>
      <timeInSecs>2.049646528903395</timeInSecs>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <entity name="coins" alias="coins">
    <component type="com.pblabs.animation.AnimatorComponent" name="SpriteAnimatorComponent">
      <animations childType="com.pblabs.animation.Animator">
        <idle type="">
          <animationType>NO_ANIMATION</animationType>
          <duration>1</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">0</targetValue>
        </idle>
        <explode type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </explode>
        <spawn type="">
          <animationType>PLAY_ANIMATION_ONCE</animationType>
          <duration>0.5</duration>
          <repeatCount>-1</repeatCount>
          <startValue type="int">0</startValue>
          <targetValue type="int">3</targetValue>
        </spawn>
      </animations>
      <defaultAnimation>idle</defaultAnimation>
      <reference>@SpriteSheetRenderer.spriteIndex</reference>
    </component>
    <component type="CartoonistEngine.RotateFlipSpriteSheetRenderer" name="SpriteSheetRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <spriteSheet componentName="spritesDefault"/>
      <zIndex>1</zIndex>
      <alpha>1</alpha>
      <spriteIndex>0</spriteIndex>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesExplode">
      <image filename="assets/anim-explode-3.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesSpawn">
      <image filename="assets/anim-spawn-1.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>4</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component type="com.pblabs.box2D.Box2DSpatialComponent" name="Spatial">
      <position>
        <x>-225.16660498395404</x>
        <y>76.92307692307696</y>
      </position>
      <size>
        <x>93.35480723530054</x>
        <y>93.35480723530054</y>
      </size>
      <spatialManager componentReference="SceneDB"/>
      <canRotate>true</canRotate>
      <canSleep>false</canSleep>
      <collidesWithTypes childType="String">
        <_0>gom-wall</_0>
        <_1>plumber</_1>
      </collidesWithTypes>
      <collisionType childType="String">
        <_0>coins</_0>
      </collisionType>
      <collisionShapes childType="com.pblabs.box2D.CollisionShape">
        <_0 type="CartoonistEngine.SimpleCollisionShape">
          <isTrigger>true</isTrigger>
        </_0>
      </collisionShapes>
    </component>
    <component type="CartoonistEngine.ShapeRenderer" name="ShapeRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <red>212</red>
      <green>18</green>
      <blue>49</blue>
    </component>
    <component type="CartoonistEngine.TextLabelRenderer" name="TextLabelRenderer">
      <scene componentReference="SceneDB"/>
      <positionProperty>@Spatial.position</positionProperty>
      <labelText>coins</labelText>
    </component>
    <component type="com.pblabs.rendering2D.spritesheet.SpriteSheetComponent" name="spritesDefault">
      <image filename="assets/blank.png"/>
      <divider type="com.pblabs.rendering2D.spritesheet.CellCountDivider">
        <xCount>1</xCount>
        <yCount>1</yCount>
      </divider>
    </component>
    <component name="RemoveOnCollideComponent0" verb="collects" specific="removes" unfulfilled="null" type="CartoonistEngine.RemoveOnCollideComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <invulnSeconds>1.6246263140812518</invulnSeconds>
      <winOnRemove>false</winOnRemove>
      <loseOnRemove>false</loseOnRemove>
      <meterIncOnRemove>false</meterIncOnRemove>
      <meterDecOnRemove>false</meterDecOnRemove>
      <meterEventID/>
      <playExplosion>true</playExplosion>
      <doNotRespawn>false</doNotRespawn>
      <collisionSounds childType="CartoonistEngine.SoundTypePair">
        <_0>
          <type>plumber</type>
        </_0>
      </collisionSounds>
    </component>
    <component name="FadeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-fade" type="CartoonistEngine.FadeComponent">
      <secsToFadeIn>0.2</secsToFadeIn>
      <temporaryFadeEnabled>false</temporaryFadeEnabled>
      <blinkEnabled>false</blinkEnabled>
    </component>
    <component name="FrictionComponent0" verb="" specific="" unfulfilled="null" recipe="auto-friction" type="CartoonistEngine.FrictionComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <friction>0.9029296333529055</friction>
      <frictionX>1</frictionX>
      <frictionY>1</frictionY>
    </component>
    <component name="GravityComponent0" verb="" specific="" unfulfilled="null" recipe="auto-gravity" type="CartoonistEngine.GravityComponent">
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
      <positionProperty>@Spatial.position</positionProperty>
      <acceleration>0</acceleration>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
    <component name="EdgeWrapComponent0" verb="auto-keepOnScreen" specific="" unfulfilled="null" type="CartoonistEngine.EdgeWrapComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <sizeProperty>@Spatial.size</sizeProperty>
    </component>
    <component name="ErraticMovementControllerComponent0" verb="" specific="" unfulfilled="null" recipe="everything moves" nonTerminal="_movesInAnyWay" type="CartoonistEngine.ErraticMovementControllerComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <velocityProperty>@Spatial.linearVelocity</velocityProperty>
      <rotationProperty>@Spatial.rotation</rotationProperty>
      <acceleration>8.836112811230123</acceleration>
      <angle>0</angle>
      <min_stride_cycles>25</min_stride_cycles>
      <max_stride_cycles>150</max_stride_cycles>
      <margin_size>60</margin_size>
    </component>
    <component name="ZOrderBySizeComponent0" verb="" specific="" unfulfilled="null" recipe="auto-zordersize" type="CartoonistEngine.ZOrderBySizeComponent"/>
  </entity>
  <entity name="World-gom-xygisofjd" alias="World-gom-xygisofjd">
    <component name="WorldObjectComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.WorldObjectComponent"/>
    <component name="GlobalEntityZOrderComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.GlobalEntityZOrderComponent"/>
    <component name="InanimateObjectComponent0" verb="" specific="" unfulfilled="null" type="CartoonistEngine.InanimateObjectComponent"/>
    <component name="CounterComponent0" verb="" specific="" unfulfilled="null" recipe="removal win recipe" type="CartoonistEngine.CounterComponent">
      <minCount>0</minCount>
      <maxCount>-1</maxCount>
      <secondsBeforeCountingStarts>2</secondsBeforeCountingStarts>
      <value>-1</value>
      <countEntityType>turtles</countEntityType>
      <winOnMaxCount>false</winOnMaxCount>
      <winOnMinCount>true</winOnMinCount>
      <loseOnMaxCount>false</loseOnMaxCount>
      <loseOnMinCount>false</loseOnMinCount>
    </component>
    <component name="SpawnGridComponent0" verb="" specific="" unfulfilled="null" recipe="removal win recipe" type="CartoonistEngine.SpawnGridComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <gridCenterX>83.55399137362838</gridCenterX>
      <gridCenterY>-37.123607750982046</gridCenterY>
      <spacingX>160.97644291818142</spacingX>
      <spacingY>158.59426092356443</spacingY>
      <spawnCountX>1.1150110624730587</spawnCountX>
      <spawnCountY>1.5484757963567972</spawnCountY>
      <chanceOfGridPositionBeingFilled>0.7181784508284181</chanceOfGridPositionBeingFilled>
      <spawnType>turtles</spawnType>
      <spawnInScreen>true</spawnInScreen>
      <spawnWithNoOverlap>false</spawnWithNoOverlap>
      <spawnInRandomPosition>false</spawnInRandomPosition>
    </component>
    <component name="MeterComponent0" verb="" specific="" unfulfilled="null" recipe="Run out of time" type="CartoonistEngine.MeterComponent">
      <nameLabel>Time Left:</nameLabel>
      <minValue>0</minValue>
      <maxValue>42</maxValue>
      <value>42</value>
      <changeAmount>-1</changeAmount>
      <changeOnTickFlag>true</changeOnTickFlag>
      <disableOnMax>false</disableOnMax>
      <disableOnMin>false</disableOnMin>
      <enableOnMax>false</enableOnMax>
      <enableOnMin>false</enableOnMin>
      <enableOnNotMin>false</enableOnNotMin>
      <disableOnNotMax>false</disableOnNotMax>
      <enableOnNotMax>false</enableOnNotMax>
      <disableOnNotMin>false</disableOnNotMin>
      <enableComponentType>_allComponents</enableComponentType>
      <winOnMax>false</winOnMax>
      <winOnMin>false</winOnMin>
      <loseOnMax>false</loseOnMax>
      <loseOnMin>true</loseOnMin>
      <entityToToggleActivation/>
      <linkedEntityName/>
      <linkedEntityProperty/>
      <linkedEntityMaxProperty/>
      <linkedEntityMinProperty/>
      <eventID/>
    </component>
    <component name="SpawnGridComponent1" verb="" specific="" unfulfilled="null" recipe="Combat" type="CartoonistEngine.SpawnGridComponent">
      <positionProperty>@Spatial.position</positionProperty>
      <gridCenterX>0</gridCenterX>
      <gridCenterY>57.692307692307736</gridCenterY>
      <spacingX>50</spacingX>
      <spacingY>50</spacingY>
      <spawnCountX>5</spawnCountX>
      <spawnCountY>1</spawnCountY>
      <chanceOfGridPositionBeingFilled>0.9394995891489089</chanceOfGridPositionBeingFilled>
      <spawnType>gom-wall</spawnType>
      <spawnInScreen>true</spawnInScreen>
      <spawnWithNoOverlap>false</spawnWithNoOverlap>
      <spawnInRandomPosition>false</spawnInRandomPosition>
    </component>
    <component name="EntityStateComponent0" verb="" specific="" unfulfilled="null" recipe="auto-state" type="CartoonistEngine.EntityStateComponent"/>
    <component name="SafeDestroyerComponent0" verb="" specific="" unfulfilled="null" recipe="auto-destroyer" type="CartoonistEngine.SafeDestroyerComponent"/>
  </entity>
</cartoonistGameXML>